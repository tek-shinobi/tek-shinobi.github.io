<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tools on Tek Shinobi Blog</title>
    <link>https://tek-shinobi.github.io/tags/tools/</link>
    <description>Recent content in tools on Tek Shinobi Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 23 Sep 2021 13:04:41 +0300</lastBuildDate><atom:link href="https://tek-shinobi.github.io/tags/tools/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang:Cobra and Viper Tutorial</title>
      <link>https://tek-shinobi.github.io/posts/golangcobra-and-viper-tutorial/</link>
      <pubDate>Thu, 23 Sep 2021 13:04:41 +0300</pubDate>
      
      <guid>https://tek-shinobi.github.io/posts/golangcobra-and-viper-tutorial/</guid>
      <description>Cobra is a tool for making CLI application. Viper is a configuration management solution for Go applications which allows you to specify configuration options for your application in several ways, including configuration files, environment variables, and command-line flags.
Why viper for config management?  It can find, load, and unmarshal values from a config file. It supports many types of files, such as JSON, TOML, YAML, ENV, or INI. It can also read values from environment variables or command-line flags.</description>
    </item>
    
    <item>
      <title>Golang:Go Tools Cheatsheet</title>
      <link>https://tek-shinobi.github.io/posts/golanggo-tools-cheatsheet/</link>
      <pubDate>Mon, 21 Jun 2021 11:01:27 +0300</pubDate>
      
      <guid>https://tek-shinobi.github.io/posts/golanggo-tools-cheatsheet/</guid>
      <description>Note: Starting in Go 1.17, installing executables with go get is deprecated. go install may be used instead. In Go 1.18, go get will no longer build packages&amp;hellip;
In other words, go get in 1.18 and beyond will no longer install executables. Use go install
 Go has an impressive number of command line tools integreated into go &amp;lt;tool_name&amp;gt; that us developers use daily. You can get a list of them by</description>
    </item>
    
  </channel>
</rss>
