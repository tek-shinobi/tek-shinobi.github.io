<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Loki on Tek Shinobi Blog</title>
    <link>https://tek-shinobi.github.io/tags/loki/</link>
    <description>Recent content in Loki on Tek Shinobi Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 12 Oct 2023 21:14:50 +0300</lastBuildDate>
    <atom:link href="https://tek-shinobi.github.io/tags/loki/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Grafana:Grafana Loki AWS S3 Integration</title>
      <link>https://tek-shinobi.github.io/posts/grafana_grafana-loki-aws-s3-integration/</link>
      <pubDate>Thu, 12 Oct 2023 21:14:50 +0300</pubDate>
      <guid>https://tek-shinobi.github.io/posts/grafana_grafana-loki-aws-s3-integration/</guid>
      <description>Some thoughts and experiences when setting up AWS S3 and single-store for Grafana-Loki. Some context:&#xA;using GLP stack (grafana, loki, promtail) Promtail collects logs from a Kafka stream and sends them to Loki for storage. It also indexes them by EC2 instance ids. Why this post? Persisting loki logs somewhere is important otherwise, everytime loki service is restarted, all previous logs and corresponding visualizations on grafana dashboard will be lost. The official docs from Grafana are at times confusing.</description>
    </item>
    <item>
      <title>Grafana Loki LogQL Tutorial</title>
      <link>https://tek-shinobi.github.io/posts/grafana-loki-logql-tutorial/</link>
      <pubDate>Wed, 15 Feb 2023 10:15:28 +0200</pubDate>
      <guid>https://tek-shinobi.github.io/posts/grafana-loki-logql-tutorial/</guid>
      <description>Description There are two types of LogQL queries:&#xA;Log queries returning the contents of log lines as streams. Metric queries that convert logs into value matrixes. A LogQL query consists of:&#xA;The log stream selector Filter expression We can use operations on both the log stream selectors and filter expressions to refine them.&#xA;Log Stream Selectors Operators = : equals != : not equals =~ : regex matches !~ : regex does not match EXAMPLES Return all log lines for the job varlog</description>
    </item>
  </channel>
</rss>
